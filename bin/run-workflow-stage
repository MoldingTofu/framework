# this script is the primary job execution script used by the workflow engine
# arguments to the script include the workflow filename, workflow stage to be executed,
# a set of variable bindings encoded as a JSON string, a set of stage reference bindings
# encoded as a JSON string, the target path for the current stage, the name of the file
# that stores the names of outputs generated by filter plugins

from geoedfframework.GeoEDFExecutor import GeoEDFExecutor

import sys

arg_count = len(sys.argv)

# extract command line arguments

# make sure the required arguments have been provided
if arg_count < 5:
    raise Exception("Incorrect number of arguments provided")

workflow_fname = str(sys.argv[1])
workflow_stage = str(sys.argv[2])
output_path = str(sys.argv[4])

var_bindings_str = None
stage_refs_str = None

# if var bindings are provided
if arg_count > 6:
    var_bindings_str = str(sys.argv[6])

# if stage references are provided
if arg_count > 7:
    stage_refs_str = str(sys.argv[7])

# create instance of executor
executor = GeoEDFExecutor(workflow_fname, workflow_stage, output_path, var_bindings_str, stage_refs_str)

# execute this workflow stage
executor.bind_and_execute()

# check if we need to return anything (status etc.)
